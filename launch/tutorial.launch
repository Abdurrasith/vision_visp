<!-- -*- xml -*-

     This tutorial relies on a recorded video sequence where the
     camera is fixed in front of a cube. The model corresponding to
     this cube is given into the models/laas-box directoy of this
     package.

     See http://www.ros.org/wiki/visp_tracker/Tutorials for more
     information.

  -->
<launch>
  <param name="use_sim_time" value="true" />

  <!-- Play the video sequence. Timestamps are changed to match your
     current computer time. -->
 <node pkg="rosbag" type="rosbag"
  name="rosbag" args="play --clock -l -r 0.5 $(find
  visp_tracker)/bag/tutorial-static-box.uncompressed.bag"/>

 <!-- Launch the tracking node -->
  <node pkg="visp_tracker" type="tracker" name="tracker_mbt">
    <param name="camera_prefix" value="/wide_left/camera" />
  </node>

  <!-- Launch the client (GUI) -->
  <node pkg="visp_tracker" type="client" name="tracker_mbt_client">
    <param name="model_path" value="$(find visp_tracker)/models" />
    <param name="model_name" value="laas-box" />

    <!-- Load recommended settings for tracking initialization. They
      will be automatically forwarded to the tracking node if the
      initialization succeed. -->
    <rosparam file="$(find visp_tracker)/models/laas-box/tracker.yaml" />
  </node>

  <!-- Launch the viewer (GUI) -->
  <node pkg="visp_tracker" type="viewer" name="tracker_mbt_viewer"/>



  <!-- Optional: localizating the robot using the tracker -->

  <!-- First, provide the transformation from the base_link to the
       camera, static in this example.
       Here the camera is one meter upside the base_link.

       This also converts from body frames orientation to camera
       orientation.
       I.e. body frames: x front (toward), y left, z up
            camera frames: z front (toward), x right, y bottom
    -->
  <!--
     <node pkg="tf"
	   type="static_transform_publisher" name="base_link_to_camera"
	   args="0 0 1 -0.49999984 0.49960184 -0.49999984 0.50039816 /base_link
		 /camera_wide_left 100" />
     -->
  <node pkg="tf" type="static_transform_publisher"
	name="base_link_to_camera" args="0.060 0.072 0.683 -0.542
	0.542 -0.455 0.455 /base_link /camera_wide_left 100" />

  <!-- Second, launch the localization node. Parameters define the
  object position w.r.t. the world frame -->
  <node pkg="visp_tracker" type="tf_localization.py" name="tf_localization">
    <param name="object_translation_x" value="-0.16781327" />
    <param name="object_translation_y" value="-1.32482741" />
    <param name="object_translation_z" value="0.30264801" />

    <param name="object_translation_qx" value="0.68557113" />
    <param name="object_translation_qy" value="-0.1106115" />
    <param name="object_translation_qz" value="0.58803323" />
    <param name="object_translation_qw" value="0.41469777" />
  </node>
</launch>
